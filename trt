from pyspark.sql import SparkSession

# Initialize SparkSession
spark = SparkSession.builder.appName("ColumnLengthComparison").getOrCreate()

# Define source and target database and table names
source_database = "your_source_database"
target_database = "your_target_database"
table_name = "your_table_name"

# Define columns to be excluded from comparison
excluded_columns = ["starttmp", "dftr"]

# Read data from the source and target tables
source_df = spark.sql(f"SELECT * FROM {source_database}.{table_name}")
target_df = spark.sql(f"SELECT * FROM {target_database}.{table_name}")

# Create a list to store the comparison results
comparison_results = []

# Iterate over the columns and compare their lengths
for col in source_df.columns:
    if col not in excluded_columns:
        source_length = source_df.selectExpr(f"LENGTH({col}) AS source_length").first().source_length
        target_length = target_df.selectExpr(f"LENGTH({col}) AS target_length").first().target_length
        if source_length != target_length:
            source_sql = source_df.selectExpr(*source_df.columns).explain(extended=True)
            target_sql = target_df.selectExpr(*target_df.columns).explain(extended=True)
            comparison_results.append((table_name, col, source_length, target_length, source_sql, target_sql))

# Create a DataFrame from the comparison results
comparison_df = spark.createDataFrame(comparison_results, ["Table Name", "Column Name", "Source Length", "Target Length", "Source SQL", "Target SQL"])

# Display the comparison results
comparison_df.show(truncate=False)

# Stop the SparkSession
spark.stop()
