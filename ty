# Define the two databases to compare
source_database = "source_db"
destination_database = "destination_db"

# Get the list of tables in the source and destination databases
source_tables = [table.name for table in spark.catalog.listTables(source_database)]
destination_tables = [table.name for table in spark.catalog.listTables(destination_database)]

# Function to compare table schemas
def compare_table_schemas(table_name):
    source_table = f"{source_database}.{table_name}"
    destination_table = f"{destination_database}.{table_name}"

    # Check if the table names start with '__apply' or '__ghg', and exclude them
    if table_name.startswith("__apply") or table_name.startswith("__ghg"):
        print(f"Skipping table '{table_name}' as it starts with '__apply' or '__ghg'.")
        return

    # Get the schemas of the source and destination tables
    source_schema = spark.sql(f"DESCRIBE {source_table}")
    destination_schema = spark.sql(f"DESCRIBE {destination_table}")

    # Compare schema differences
    if source_schema.collect() != destination_schema.collect():
        print(f"Schema mismatch for table '{table_name}':")
        print(f"Source Table Schema:")
        source_schema.show(truncate=False)
        print(f"Destination Table Schema:")
        destination_schema.show(truncate=False)

# Compare tables in the source and destination databases
for table_name in set(source_tables).intersection(destination_tables):
    compare_table_schemas(table_name)
