    pass_fail_count = comparison_df.groupBy("status").count().toPandas()
    plt.figure(figsize=(8, 6))
    plt.bar(pass_fail_count["status"], pass_fail_count["count"], color=['green', 'red'])
    plt.xlabel("Status")
    plt.ylabel("Count")
    plt.title("Pass/Fail Metrics")
    plt.show()

    # Create HTML report with failed columns
    failed_columns_df = comparison_df.filter(comparison_df["status"] == "fail")
    html_report = StringIO()
    failed_columns_df.limit(10).toPandas().to_html(html_report, escape=False, index=False, classes='table table-bordered table-condensed table-responsive')
    display(HTML(html_report.getvalue()))


import matplotlib.pyplot as plt
from pyspark.sql import SparkSession
from pyspark.sql.functions import concat_ws
from pyspark.sql.types import StructType, StructField, StringType
import pandas as pd
import matplotlib.pyplot as plt
from io import StringIO
from IPython.display import display, HTML
