import pandas as pd
from tkinter import Tk, filedialog

# Function to handle button click event and generate the new CSV documents
def generate_csv_documents():
    # Open file browser dialog to select template document
    Tk().withdraw()
    template_file_path = filedialog.askopenfilename(title="Select Template Document")

    # Open file browser dialog to select output path
    output_folder_path = filedialog.askdirectory(title="Select Output Folder")

    # Read the template document
    template_df = pd.read_csv(template_file_path)

    # Read the table list from the "Tablelist" tab
    table_list_df = pd.read_csv(template_file_path, sheet_name="Tablelist")

    # Iterate over each table in the table list
    for _, table_row in table_list_df.iterrows():
        table_name = table_row["Table Name"]
        layer = table_row["(Layer)"]
        source_layer = table_row["(source_Layer)"]
        target_layer = table_row["(Target_Layer)"]

        # Copy relevant rows from the template document based on table name
        table_df = template_df[template_df["Table Name"] == table_name].copy()

        # Replace relevant values in the table DataFrame
        table_df["Table Name"] = table_name
        table_df["(Layer)"] = layer
        table_df["(source_Layer)"] = source_layer
        table_df["(Target_Layer)"] = target_layer

        # Generate the output CSV file path
        output_file_path = f"{output_folder_path}/{table_name}.csv"

        # Save the table DataFrame as a new CSV document
        table_df.to_csv(output_file_path, index=False)

# Create the GUI window
window = Tk()

# Add a button to select the template document and generate CSV documents
generate_button = Button(window, text="Generate CSV Documents", command=generate_csv_documents)
generate_button.pack()

# Start the GUI event loop
window.mainloop()
