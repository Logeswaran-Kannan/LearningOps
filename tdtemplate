import pandas as pd
from tkinter import Tk, filedialog

# Create the GUI to select input and output files
root = Tk()
root.withdraw()

# Select the input CSV template file using the file dialog
input_filepath = filedialog.askopenfilename(title="Select Input CSV Template", filetypes=[("CSV Files", "*.csv")])

# Select the output CSV file using the file dialog
output_filepath = filedialog.asksaveasfilename(title="Save Output CSV", defaultextension=".csv", filetypes=[("CSV Files", "*.csv")])

# Read the input CSV template into a pandas DataFrame
df_template = pd.read_csv(input_filepath)

# Read the Tablelist tab of the input CSV template
df_tablelist = pd.read_csv(input_filepath, sheet_name="Tablelist")

# Iterate over each table in the Tablelist tab
for index, row in df_tablelist.iterrows():
    table_name = row["Table Name"]
    layer = row["(Layer)"]
    source_layer = row["(Source_Layer)"]
    target_layer = row["(Target_Layer)"]

    # Filter the rows of the template based on the table name
    filtered_rows = df_template[df_template["table_name"] == table_name].copy()

    # Replace relevant values in the filtered rows
    filtered_rows["table_name"] = table_name
    filtered_rows["(Layer)"] = layer
    filtered_rows["(Source_Layer)"] = source_layer
    filtered_rows["(Target_Layer)"] = target_layer

    # Append the filtered rows to the consolidated sheet
    df_template = df_template.append(filtered_rows)

# Save the modified DataFrame as the output CSV file
df_template.to_csv(output_filepath, index=False)
