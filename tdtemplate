import tkinter as tk
from tkinter import filedialog, messagebox
import csv
import os
import shutil

def select_template_file():
    file_path = filedialog.askopenfilename(title="Select Template File", filetypes=(("CSV files", "*.csv"),))
    template_entry.delete(0, tk.END)
    template_entry.insert(tk.END, file_path)

def select_table_list_file():
    file_path = filedialog.askopenfilename(title="Select Table List File", filetypes=(("CSV files", "*.csv"),))
    table_list_entry.delete(0, tk.END)
    table_list_entry.insert(tk.END, file_path)

def select_output_file():
    file_path = filedialog.asksaveasfilename(title="Save Consolidated CSV File", filetypes=(("CSV files", "*.csv"),))
    output_entry.delete(0, tk.END)
    output_entry.insert(tk.END, file_path)

def generate_csv_documents():
    template_file_path = template_entry.get()
    table_list_file_path = table_list_entry.get()
    output_file_path = output_entry.get()

    with open(table_list_file_path, 'r') as table_list_file:
        reader = csv.DictReader(table_list_file)
        for row in reader:
            table_name = row['Table']
            layer = row['Layer']
            source_layer = row['(source_Layer)']
            target_layer = row['(Target_Layer)']

            with open(template_file_path, 'r') as template_file:
                content = template_file.read()

            content = content.replace("{table_name}", table_name)
            content = content.replace("{Layer}", layer)
            content = content.replace("{source_Layer}", source_layer)
            content = content.replace("{Target_Layer}", target_layer)

            with open(output_file_path, 'a') as output_file:
                output_file.write(content)

    tk.messagebox.showinfo("CSV Document Generated", "The consolidated CSV document has been generated successfully!")

# Create the GUI window
window = tk.Tk()
window.title("CSV Document Generator")

# Template file selection
template_label = tk.Label(window, text="Template File:")
template_label.pack()
template_entry = tk.Entry(window, width=50)
template_entry.pack()
template_button = tk.Button(window, text="Browse", command=select_template_file)
template_button.pack()

# Table list file selection
table_list_label = tk.Label(window, text="Table List File:")
table_list_label.pack()
table_list_entry = tk.Entry(window, width=50)
table_list_entry.pack()
table_list_button = tk.Button(window, text="Browse", command=select_table_list_file)
table_list_button.pack()

# Output file selection
output_label = tk.Label(window, text="Output File:")
output_label.pack()
output_entry = tk.Entry(window, width=50)
output_entry.pack()
output_button = tk.Button(window, text="Save As", command=select_output_file)
output_button.pack()

# Generate CSV document button
generate_button = tk.Button(window, text="Generate CSV Document", command=generate_csv_documents)
generate_button.pack()

# Start the GUI event loop
window.mainloop()
