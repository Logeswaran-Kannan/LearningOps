# Import necessary libraries
from pyspark.sql import SparkSession
import datetime

# Create a Spark session
spark = SparkSession.builder.appName("DataComparison").getOrCreate()

# Define the source and destination database connections
source_database_name = "source_db"
destination_database_name = "destination_db"

# Define the date range
start_date = datetime.datetime(2023, 8, 30, 8, 43, 28, 123000)
end_date = datetime.datetime(2023, 9, 4, 8, 43, 28, 123000)

# Function to perform data comparison for a table
def compare_table(table_name):
    # Check if the table exists in the destination database
    if table_name not in spark.catalog.listTables(destination_database_name):
        return f"Table '{table_name}' missing in destination."

    # Sample records from the source database
    source_sample = spark.sql(f"""
        SELECT *
        FROM {source_database_name}.{table_name}
        WHERE sequence_by BETWEEN '{start_date}' AND '{end_date}'
        LIMIT 50
    """)

    # Sample records from the destination database
    destination_sample = spark.sql(f"""
        SELECT *
        FROM {destination_database_name}.{table_name}
        WHERE sequence_by BETWEEN '{start_date}' AND '{end_date}'
        LIMIT 50
    """)

    # Columns to exclude from comparison
    exclude_columns = ['source_system', 'valid_from_dt']

    # Perform data comparison
    diff_count = source_sample.exceptAll(destination_sample.select(source_sample.columns)).count()
    if diff_count > 0:
        return f"Data mismatch in table '{table_name}': {diff_count} rows differ."
    else:
        return f"Data in table '{table_name}' matches."

# Get the list of tables in the source database
source_tables = spark.catalog.listTables(source_database_name)

# Filter out tables that match the exclusion criteria
eligible_tables = [table.name for table in source_tables if not (table.name.startswith('__apply') or table.name.endswith('__ghg'))]

# Initialize progress tracker
progress_tracker = []

# Perform data comparison for each eligible table
for table_name in eligible_tables:
    result = compare_table(table_name)
    progress_tracker.append(result)

# Display progress using Databricks graph
display(progress_tracker)
