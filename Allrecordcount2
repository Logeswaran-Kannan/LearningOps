-- Create the target table for table-level metrics
CREATE TABLE ddl_comparison_table_level_metrics (
    LOAD_DATE DATE,
    TABLE_NAME_RESOLVED STRING,
    PRESENT_IN_ORACLE INT,
    PRESENT_IN_REPLICA INT,
    ORACLE_COLUMN_COUNT INT,
    REPLICA_COLUMN_COUNT INT,
    MATCH_COUNT INT,
    COLUMN_MISSING_IN_ORACLE_COUNT INT,
    COLUMN_MISSING_IN_REPLICA_COUNT INT,
    PRECISION_SCALE_MISMATCH_COUNT INT,
    IS_ORA_PC INT
);

-- Insert logic into the metrics table
INSERT INTO ddl_comparison_table_level_metrics
SELECT
    CURRENT_DATE AS LOAD_DATE,
    TABLE_NAME_RESOLVED,

    -- Presence flags
    CASE WHEN MAX(CASE WHEN ORACLE_TABLE_NAME IS NOT NULL THEN 1 ELSE 0 END) = 1 THEN 1 ELSE 0 END AS PRESENT_IN_ORACLE,
    CASE WHEN MAX(CASE WHEN REPLICA_TABLE_NAME IS NOT NULL THEN 1 ELSE 0 END) = 1 THEN 1 ELSE 0 END AS PRESENT_IN_REPLICA,

    -- Column counts
    COUNT(DISTINCT CASE WHEN ORACLE_COLUMN_NAME IS NOT NULL THEN ORACLE_COLUMN_NAME END) AS ORACLE_COLUMN_COUNT,
    COUNT(DISTINCT CASE WHEN REPLICA_COLUMN_NAME IS NOT NULL THEN REPLICA_COLUMN_NAME END) AS REPLICA_COLUMN_COUNT,

    -- Comparison result metrics
    COUNT(CASE WHEN COMPARISON_RESULT = 'MATCH' THEN 1 END) AS MATCH_COUNT,
    COUNT(CASE WHEN COMPARISON_RESULT = 'COLUMN MISSING IN ORACLE' THEN 1 END) AS COLUMN_MISSING_IN_ORACLE_COUNT,
    COUNT(CASE WHEN COMPARISON_RESULT = 'COLUMN MISSING IN REPLICA' THEN 1 END) AS COLUMN_MISSING_IN_REPLICA_COUNT,
    COUNT(CASE WHEN COMPARISON_RESULT = 'PRECISION OR SCALE MISMATCH' THEN 1 END) AS PRECISION_SCALE_MISMATCH_COUNT,

    -- Conditional Oracle PC flag
    CASE 
        WHEN MAX(CASE WHEN ORACLE_TABLE_NAME IS NOT NULL THEN 1 ELSE 0 END) = 1 
             AND LOWER(SUBSTRING(TABLE_NAME_RESOLVED, 1, 2)) = 'pc' 
        THEN 1 ELSE 0 
    END AS IS_ORA_PC

FROM ddl_comparison_table  -- Replace with your actual base comparison table
GROUP BY TABLE_NAME_RESOLVED;
