import jira
import openpyxl
import tkinter as tk
from tkinter import filedialog

def connect_to_jira(server, username, token):
    try:
        options = {
            'server': server,
            'verify': True,
            'headers': {
                'Authorization': 'Basic %s' % jira.utils.base64string(username, token)
            }
        }
        jira_client = jira.JIRA(**options)
        print("Connection to Jira successful.")
        return jira_client
    except Exception as e:
        print("Error connecting to Jira:", str(e))
        return None

def read_excel_file(file_path):
    try:
        workbook = openpyxl.load_workbook(file_path)
        sheet = workbook.active
        # Assuming the data is in the format "defect_id, user_story_id"
        data = [(row[0].value, row[1].value) for row in sheet.iter_rows(min_row=2)]
        return data
    except Exception as e:
        print("Error reading Excel file:", str(e))
        return None

def link_issues_in_jira(jira_client, data):
    if not jira_client:
        return

    for defect_id, user_story_id in data:
        try:
            jira_client.link_issue(defect_id, user_story_id, "Blocks")
            print(f"Linked Defect {defect_id} with User Story {user_story_id}")
        except Exception as e:
            print(f"Error linking Defect {defect_id} with User Story {user_story_id}: {str(e)}")

def main():
    # Ask for Jira connection details
    server = input("Enter Jira server URL: ")
    username = input("Enter Jira username: ")
    token = input("Enter Jira token: ")

    # Connect to Jira
    jira_client = connect_to_jira(server, username, token)
    if not jira_client:
        return

    # Ask for Excel file using GUI
    root = tk.Tk()
    root.withdraw()  # Hide the main window

    file_path = filedialog.askopenfilename(title="Select Excel File", filetypes=(("Excel files", "*.xlsx"),))
    if not file_path:
        print("No file selected. Exiting...")
        return

    # Read data from Excel file
    data = read_excel_file(file_path)
    if not data:
        return

    # Link issues in Jira
    link_issues_in_jira(jira_client, data)

if __name__ == "__main__":
    main()
