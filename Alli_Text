Automation Test Script Framework – Ingestion Validation (All 6 MQS Messages till Silverish Layer)

Description:

This task involves designing and developing an automation test framework to validate the ingestion process for all six MQS message types up to the Silverish (DLT) layer within the Azure Data Platform.

The automation will cover validation of data flow, schema mapping, data quality, and linkage integrity across all six messages:

MQS Quote Request

PreComp Response

Rating Request

Rating Response

Cache ID

Stop Quote

The framework will enable reusable, parameter-driven test execution, providing automated validation for ingestion, schema consistency, and field-level data verification across source → landing → DLT → Silverish stages.

Validation Scope / Automation Coverage:

Ingestion Validation Automation:

Validate all 6 MQS messages processed from landing to Silverish layer.

Compare record counts and field-level data between DLT and Silverish.

Schema and Mapping Validation:

Automated schema comparison between ingestion output and mapping specification.

Validate column presence, data types, and mandatory/nullable fields.

Data Quality Checks:

Automated rules for null, duplicate, and invalid data validation.

Configurable DQ rule engine integrated with parameterized SQL queries.

Reconciliation Automation:

Count-level and checksum-level validation between source JSON and Silverish layer.

Identify data loss or truncation.

Linkage & Referential Integrity:

Automated linkage validation between Quote ID, Cache ID, and Interaction ID.

Validate cross-message consistency (e.g., Quote Request → Rating Response → Stop Quote).

CDC & Incremental Load Testing:

Validate incremental data ingestion logic through automated snapshot comparison.

Support for time travel-based re-run testing.

Error Logging & Reporting:

Capture ingestion error logs, schema drift, and validation failures automatically.

Generate consolidated report for each message type.

Scalability:

Framework designed for reusability across future Radar Live ingestion messages.

Ability to extend for Silver and Gold layer validations in subsequent sprints.

Acceptance Criteria / Testing Requirements:

✅ Framework automates validation for all 6 MQS message types (Landing → Silverish).
✅ Schema and mapping comparison automated for each ingestion stage.
✅ Automated DQ and reconciliation checks implemented and parameterized.
✅ Configurable test run for new message versions or schema changes.
✅ Automated evidence generation (test logs, validation summary, and result export).
✅ Integration with DataBricks and Azure Data Lakehouse tables verified.
✅ Code reviewed and successfully executed in SIT environment.

Dependencies:

Access to SIT environment, Databricks workspace, and DLT tables.

Finalized ingestion mapping documents for all six MQS messages.

Event Hub configuration for message ingestion simulation.

Collaboration with Data Engineering for pipeline triggers and schema drift logs.

Reusable test data scenarios aligned with E2E data.

Definition of Done (DoD):

✔️ Automation framework developed, peer reviewed, and approved.
✔️ Test scripts executed for all 6 MQS messages in SIT.
✔️ Validation evidence (logs, comparison outputs) stored in shared repo.
✔️ Execution summary and defect logs attached to JIRA.
✔️ Framework baseline published for reuse in next phase (Silver and Gold testing).
✔️ Sign-off by BICOE QA Lead and Test Automation Lead.

Deliverables:

Python/SQL-based Automation Framework (Databricks or PySpark notebook).

Automated ingestion validation reports (in CSV/Excel).

Centralized result logs and DQ summary per message type.

Documentation (user guide + configuration reference).
