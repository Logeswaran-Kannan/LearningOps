RL19.4 – Azure DevOps Model Release Pipeline
Task 1: Test Design & Scripting – RL19.4 Azure DevOps Model Release Pipeline

Description:
Design and prepare test scripts for validating the Azure DevOps model release pipeline process for ingestion jobs (RL19.4).
Covers build deployment, rollback validation, and release approval workflow per the BICOE release standard.

Validation Scope:

Review DevOps pipeline flow for ingestion deployment (build, release, rollback).

Define test steps to validate each stage’s success and log outputs.

Cover failure scenarios (rollback, re-trigger).

Map scripts to Confluence release design.

Upload all test cases to JIRA with requirement traceability.

Acceptance Criteria:
✅ Test cases prepared and aligned to mapping & design.
✅ Scripts reviewed by QA and DevOps.
✅ Upload complete in JIRA.

Dependencies:

Release process documentation from DevOps.

Access to pipeline configuration.

DoD:
✔️ Test cases/scripts reviewed and approved.
✔️ JIRA upload completed.
✔️ Ready for SIT execution.

Task 2: Test Execution – RL19.4 Azure DevOps Model Release Pipeline

Description:
Execute designed test cases to validate the Azure DevOps release pipeline.

Validation Scope:

Validate successful deployment and rollback of ingestion jobs.

Check pipeline log messages and build validation.

Confirm deployment notification triggers and approvals.

Validate version tagging and audit trail.

Acceptance Criteria:
✅ All test cases executed.
✅ Logs captured as SIT evidence.
✅ Rollback tested successfully.
✅ No failed jobs without retry mechanism.

Dependencies:

Access to Azure DevOps pipelines in SIT.

Coordination with DevOps engineers.

DoD:
✔️ All tests executed with evidence attached.
✔️ SIT sign-off from QA Lead.

🟩 RL19.7 – Monitoring
Task 3: Test Design & Scripting – RL19.7 Monitoring

Description:
Design and create test scripts to validate ingestion monitoring and alerting dashboards (RL19.7).
Ensure test coverage for monitoring setup, alerting logic, and SLA thresholds.

Validation Scope:

Review monitoring dashboard setup in Azure Monitor / Log Analytics.

Define test data and triggers for alert validation (success/failure, delayed loads).

Document test cases for data quality and job status monitoring.

Upload designed test cases and scripts to JIRA.

Acceptance Criteria:
✅ Test scripts aligned to monitoring design and mapping.
✅ Test data scenarios captured (success, fail, delayed run).
✅ JIRA upload complete and reviewed.

Dependencies:

Access to monitoring dashboards.

SLA threshold definitions from DevOps.

DoD:
✔️ All test scripts reviewed and uploaded.
✔️ Ready for execution phase.

Task 4: Test Execution – RL19.7 Monitoring

Description:
Execute monitoring validation scripts to confirm job health tracking and alert accuracy.

Validation Scope:

Trigger ingestion job success/failure scenarios.

Validate dashboard refresh, job count, and SLA breach alerts.

Confirm email/slack notifications received as configured.

Validate alert logs stored in monitoring DB.

Acceptance Criteria:
✅ Monitoring dashboards show correct job status.
✅ Alerts generated for failures/delays.
✅ Evidence (screenshots, alert logs) captured in JIRA.
✅ No high/critical monitoring gaps.

Dependencies:

SIT access to Azure Monitor.

DevOps setup of alerting channels.

DoD:
✔️ Monitoring validated across ingestion jobs.
✔️ Test evidence uploaded.
✔️ SIT sign-off completed.



🟩 RL – Quote Reconciliation Between Source, MQS, and Interaction
Task 1: Test Design & Scripting – Quote Reconciliation (Source ↔ MQS ↔ Interaction)

Description:
Design and prepare test scripts for validating Quote ID reconciliation across Source systems (Athena), MQS messages, and Interaction data within the Azure Data Platform.
This activity includes defining reconciliation logic, data sampling strategy, SQL framework, and detailed test cases aligned with mapping and lineage documents.

Validation Scope:

Review and document data flow and lineage of Quote ID across Source → MQS → Interaction.

Define reconciliation logic (count match, field-level checksum, exception reporting).

Identify test datasets covering all Quote journey types: NB, MTA, Renewal, Requote, Decline.

Create SQL/automation scripts for reconciliation validation.

Define exception and error-handling criteria.

Upload designed test cases with traceability to JIRA.

Acceptance Criteria / Testing Requirements:
✅ Reconciliation logic documented and approved (count-level, field-level, and exception).
✅ Test cases/scripts created for each journey type.
✅ Traceability to requirement IDs in JIRA established.
✅ Peer review completed with BICOE QA and Data Engineering.
✅ All test cases uploaded to JIRA and ready for SIT execution.

Dependencies:

Access to Source (Athena), MQS payloads, and Interaction tables.

Latest data mapping and lineage documentation.

Sample datasets prepared for Quote IDs across all journeys.

Coordination with Data Engineering for connection and access setup.

Definition of Done (DoD):
✔️ Test design and reconciliation scripts reviewed and approved.
✔️ Mapping alignment confirmed.
✔️ Test cases uploaded to JIRA.
✔️ Ready for SIT execution.

Task 2: Test Execution – Quote Reconciliation (Source ↔ MQS ↔ Interaction)

Description:
Execute the defined reconciliation test scripts to validate Quote ID consistency and data lineage between Source, MQS, and Interaction datasets.
The testing will confirm data completeness, uniqueness, linkage, and correctness across all ingestion points within the SIT environment.

Validation Scope:

Execute reconciliation scripts for all Quote journey types (NB, MTA, Renewal, Requote, Decline).

Validate count-level match between Source, MQS, and Interaction tables.

Validate field-level match for Quote ID and related attributes (Cache ID, Interaction ID).

Identify and log mismatched or missing records.

Validate exception handling and mismatch reporting logic.

Capture evidence (query outputs, logs) for all test runs.

Acceptance Criteria / Testing Requirements:
✅ Successful reconciliation with no missing or mismatched Quote IDs.
✅ Count-level and field-level results match within tolerance range.
✅ Exception logs generated for failed records.
✅ All defects raised, tracked, and retested.
✅ SIT evidence (queries, screenshots, logs) attached in JIRA.
✅ Sign-off obtained from BICOE QA Lead.

Dependencies:

Completion of Test Design task and approval of reconciliation logic.

SIT environment access to Source, MQS, and Interaction tables.

Data Engineering support for lineage verification and query performance.

Availability of test data for all Quote journey types.

Definition of Done (DoD):
✔️ All reconciliation test cases executed and evidence attached.
✔️ Mismatch analysis documented and reviewed.
✔️ Defects resolved or accepted with sign-off.
✔️ SIT validation completed and approved.
