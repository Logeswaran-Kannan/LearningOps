from pyspark.sql import SparkSession
from pyspark.sql.functions import *
import seaborn as sns
import matplotlib.pyplot as plt
from IPython.display import HTML

# Initialize Spark session
spark = SparkSession.builder.appName("ExploratoryDataAnalysis").getOrCreate()

# Load input CSV containing DLT view names
input_csv_path = "dbfs:/path/to/input.csv"  # Update with the actual DBFS path
input_df = spark.read.option("header", "true").csv(input_csv_path)
dlt_view_names = input_df.select("DLTViewName").rdd.flatMap(lambda x: x).collect()

# Function to generate EDA HTML report for a DLT view
def generate_eda_report(dlt_view_name):
    # Load data from DLT view
    data = spark.sql(f"SELECT * FROM {dlt_view_name}")

    # Basic statistics
    summary = data.describe().toPandas()
    summary_html = summary.to_html()

    # Missing values count
    missing_values = data.select([count(when(col(c).isNull(), c)).alias(c) for c in data.columns]).toPandas()
    missing_values_html = missing_values.to_html()

    # Visualization: Distribution plots
    sns.set(style="whitegrid")
    plt.figure(figsize=(12, 8))
    for column in data.columns:
        sns.histplot(data.toPandas(), x=column, kde=True)
        plt.title(f'Distribution of {column}')
        plt.savefig(f"/dbfs/tmp/{column}_distribution.png")
        plt.close()

    # Correlation matrix
    correlation_matrix = data.drop(*[c for c, dtype in data.dtypes if dtype == 'string']).toPandas().corr()

    # Enhanced correlation matrix visualization
    plt.figure(figsize=(10, 8))
    sns.set(font_scale=1.2)
    sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
    plt.title("Correlation Matrix")
    plt.savefig("/dbfs/tmp/correlation_matrix.png")
    plt.close()

    # Combine HTML components
    eda_report_html = f"""
    <html>
    <head>
    </head>
    <body>
    <h2>Exploratory Data Analysis Report for {dlt_view_name}</h2>
    <h3>Summary Statistics</h3>
    {summary_html}
    <h3>Missing Values</h3>
    {missing_values_html}
    """

    # Add distribution plots and correlation matrix to the HTML report
    for column in data.columns:
        eda_report_html += f"<h3>Distribution of {column}</h3>"
        eda_report_html += f'<img src="/dbfs/tmp/{column}_distribution.png">'
    eda_report_html += f"""
    <h3>Correlation Matrix</h3>
    <img src="/dbfs/tmp/correlation_matrix.png">
    </body>
    </html>
    """

    # Save HTML report to output DBFS path
    output_file_path = f"/dbfs/path/to/output_folder/{dlt_view_name}_eda_report.html"
    with open(output_file_path, "w") as html_file:
        html_file.write(eda_report_html)

# Generate EDA reports and save HTML files for each DLT view
for dlt_view_name in dlt_view_names:
    generate_eda_report(dlt_view_name)

# Display completion message
print("EDA reports generated and HTML files saved.")
