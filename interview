import datetime
from pyspark.dbutils import DBUtils
import ipywidgets as widgets
from IPython.display import display

# Function to retrieve metadata details of files
def get_file_metadata(file_path):
    dbutils = DBUtils()
    file_info = dbutils.fs.head(file_path, 1)
    file_size = file_info[0].size
    file_creation_date = datetime.datetime.fromtimestamp(file_info[0].modificationTime / 1000.0)
    current_date = datetime.datetime.now()
    last_update_date = datetime.datetime.fromtimestamp(file_info[0].modificationTime / 1000.0)
    delete_ready = "Yes" if (current_date - file_creation_date).days >= 365 * 2 else "No"
    return {
        'Name': file_info[0].name,
        'Size': file_size,
        'Path': file_path,
        'Creation Date': file_creation_date,
        'Last Update Date': last_update_date,
        'Delete Ready': delete_ready
    }

# Function to handle dropdown widget change event
def dropdown_changed(change):
    file_path = change['new']
    metadata = get_file_metadata(file_path)
    print("File Metadata:")
    for key, value in metadata.items():
        print(f"{key}: {value}")
    print()

# Retrieve DBFS file paths
dbfs_paths = dbutils.fs.ls("dbfs:/")  # Replace with the desired DBFS path

# Create dropdown widget
dropdown = widgets.Dropdown(
    options=[(file_info.path, file_info.path) for file_info in dbfs_paths],
    description='DBFS Path:',
    layout={'width': '500px'}
)

# Handle dropdown widget change event
dropdown.observe(dropdown_changed, names='value')

# Display dropdown widget
display(dropdown)
