DO $$
DECLARE
    table_list TEXT[] := ARRAY['public.orders', 'public.users', 'events']; -- your tables
    target_date DATE := DATE '2025-05-19';
    t TEXT;
    sch TEXT;
    tbl TEXT;
    rel_oid OID;
    col_exists BOOLEAN;
    col_type TEXT;
    sql_text TEXT;
    cnt BIGINT;
BEGIN
    FOREACH t IN ARRAY table_list LOOP
        -- Parse schema/table
        IF position('.' IN t) > 0 THEN
            sch := split_part(t, '.', 1);
            tbl := split_part(t, '.', 2);
        ELSE
            sch := 'public';
            tbl := t;
        END IF;

        -- Check table exists
        SELECT c.oid
        INTO rel_oid
        FROM pg_catalog.pg_class c
        JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
        WHERE n.nspname = sch
          AND c.relname = tbl
          AND c.relkind = 'r';

        IF rel_oid IS NULL THEN
            RAISE NOTICE 'Table: %.% -> NOT FOUND', sch, tbl;
            CONTINUE;
        END IF;

        -- Check updatetime existence
        SELECT TRUE,
               format_type(a.atttypid, a.atttypmod)
        INTO col_exists, col_type
        FROM pg_catalog.pg_attribute a
        WHERE a.attrelid = rel_oid
          AND a.attname = 'updatetime'
          AND a.attnum > 0
          AND NOT a.attisdropped
        LIMIT 1;

        IF col_exists THEN
            col_type := lower(col_type);

            IF col_type = 'date' THEN
                sql_text := format(
                    'SELECT COUNT(*) FROM %I.%I WHERE updatetime >= $1::date AND updatetime < ($1::date + 1)',
                    sch, tbl
                );
            ELSIF col_type LIKE 'timestamp with time zone%' OR col_type = 'timestamptz' THEN
                sql_text := format(
                    'SELECT COUNT(*) FROM %I.%I WHERE updatetime >= $1::timestamptz AND updatetime < ($1::timestamptz + interval ''1 day'')',
                    sch, tbl
                );
            ELSE
                sql_text := format(
                    'SELECT COUNT(*) FROM %I.%I WHERE updatetime >= $1::timestamp AND updatetime < ($1::timestamp + interval ''1 day'')',
                    sch, tbl
                );
            END IF;

            EXECUTE sql_text USING target_date INTO cnt;
            RAISE NOTICE 'Table: %.% | updatetime present (%), Count for %: %',
                sch, tbl, col_type, target_date, cnt;
        ELSE
            sql_text := format('SELECT COUNT(*) FROM %I.%I', sch, tbl);
            EXECUTE sql_text INTO cnt;
            RAISE NOTICE 'Table: %.% | updatetime NOT present, Total Count: %',
                sch, tbl, cnt;
        END IF;
    END LOOP;
END $$;
