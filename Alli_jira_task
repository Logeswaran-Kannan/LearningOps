‚úÖ SIT Scope ‚Äì Vehicle Model / Area Factor Ingestion (MI Team Perspective)
üîß Functional Validation ‚Äì In Scope (Single-Line Statements)
Validate successful ingestion of CSV rating files into Cosmos DB.

Verify schema alignment between uploaded file and target DB definitions.

Ensure all required columns (Vehicle Model/Area factors) are present in the ingested file.

Confirm data type and value formatting for each ingested field (e.g., numeric, string).

Validate error handling by injecting malformed or incomplete files.

Ensure duplicate file prevention or appropriate overwrite behavior is handled.

Check logs for success/failure entries including timestamps, file names, and record counts.

Confirm data landed in Databricks BLOB with appropriate naming and directory structure.

Validate re-processing mechanism for corrected file submissions after failure.

Ensure new or updated rating factors reflect properly in MI downstream views (if available).

üöÄ Non-Functional Validation ‚Äì In Scope (Single-Line Statements)
Validate ingestion performance against volume thresholds (small vs. large file).

Ensure Cosmos DB throughput and response times are within acceptable SLA.

Confirm ingestion is resilient to transient errors (network, source delays).

Verify audit trail creation for traceability of file load attempts.

Validate support for schema evolution (i.e., additional fields) without failure.

Confirm storage persistence of rating files in BLOB for recovery and auditability.

‚ùå Out-of-Scope Items
Validation of actual rating factor values (e.g., whether the correct model has the right factor).

Integration with pricing engine or downstream quote outcome validation.

UI-based file upload portals (if any exist).

Real-time streaming ingestion (only batch CSV ingestion covered here).

Machine learning or scoring engine validations that use the ingested data.

Business approvals, pricing logic, or governance sign-off workflows.

‚ö†Ô∏è Caveats
File content is assumed to be owned and signed off by the Pricing team; MI team validates only structure and loading.

Schema evolution (new columns) is only supported if backward compatibility is maintained; breaking changes may require dev intervention.

Performance testing is scoped to ingestion response times‚Äînot full platform load tests unless stated otherwise.

Cosmos DB performance tuning (e.g., RU adjustments) may impact results and is managed by Infra/DevOps.

MI team does not test how these values impact final quote outcomes.

üë• Business Scenario View (For UAT Alignment)
Scenario	Purpose	Who Validates
Valid file load and availability in Cosmos DB	Ensure data is usable by downstream MI dashboards	MI team (SIT)
File with missing or renamed column	Validate system rejects or flags schema misalignment	MI team (SIT)
File with correct schema but wrong business values (e.g., invalid region code)	Pricing/UAT team confirms business rule enforcement	UAT (Pricing)
Updated model group with new factor	Confirm schema can handle additional fields	MI team + UAT (Pricing)
Re-submission of corrected file after rejection	Validate reprocessing flow and audit trail	MI team
End-to-end reporting of rating impact by model/area	Business confirms KPI alignment in reports	UAT (Business/MI users)
