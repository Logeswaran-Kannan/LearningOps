🔍 Test Scenario ID: EH-BR-03 – Timestamp Capture
🔹 Purpose
This scenario verifies that ingestion-related timestamps (such as eventhub_enqueued_time, load_dt, _ingest_time, etc.) are accurately captured and persisted in the Bronze Layer for every message. Accurate timestamping is essential for data traceability, time-window partitioning, latency tracking, and replay handling.

🔹 Scope and Components Involved
Source of Truth:

Azure Event Hub enqueuedTimeUtc (system metadata)

Technical Ingestion Mapping Documentation (defines timestamp fields)

Databricks DLT logic for ingestion and metadata capture

Ingestion Pipeline:

EventHub → DLT Parse Stage → Bronze Table

System-generated metadata fields should be injected at the ingestion point and stored persistently in Bronze

🔹 Validation Objectives
Confirm that eventhub_enqueued_time (from Azure Event Hub) is captured and mapped to load_dt or equivalent column in Bronze.

Verify _ingest_time (system ingestion timestamp by DLT) is generated and available.

Validate logical consistency between all timestamps:

eventhub_enqueued_time ≤ _ingest_time ≤ bronze_written_time (if available)

Ensure timezones (UTC/local) are handled uniformly.

🧪 Testing Approach
✅ Cross-verify with Technical Ingestion Documentation
As seen in the DLT ingestion architecture diagram, the documentation states:

“Ehub Enqueued Timestamp will be the value for Load_DT”

“Ehub Enqueued Date will be the value for Anchor Date”

This implies a direct mapping must exist from EventHub’s enqueuedTimeUtc system property to a Bronze layer field.

Ensure these fields are populated consistently in every record.

Review DLT expectations or transformations where this timestamp is injected.

📋 Validation Methods
Compare the raw message metadata from Event Hub (via diagnostics/logs) to the timestamp values stored in the Bronze table.

Use test data with known delays or variations to confirm timestamp capture fidelity.

Monitor ingestion logs or failures to identify if timestamp capture is missed or inconsistent.

✅ Success Criteria
Every record in Bronze contains a valid:

eventhub_enqueued_time or mapped load_dt

_ingest_time (if system field)

The timestamps reflect correct order of ingestion and no fields are null or defaulted.

Values follow expected formatting (ISO8601, UTC) and no timezone drift is observed.

🧾 Exclusions
Latency measurement end-to-end is validated in E2E-02 – Latency Measurement.

Time-window aggregation or SLA alerts (like delay detection) are covered under OBS-03 – Time Window Lag Analysis.

🗂 Mapped Data Quality Requirements
DQ Ref	Description
RL DQ04 – Timeliness	Ensures timestamps reflect real-time data arrival and readiness.
RL DQ09 – Traceability	Timestamp is essential metadata for tracing ingestion lifecycle.
RL DQ01 – Accuracy	Accurate timestamping reflects the true event sequence.

🔐 Pre-requisites & Access Required
Access to:

Azure Event Hub diagnostic logs (for enqueuedTimeUtc)

Bronze table schema and DLT pipeline definitions

Ingestion mapping specification and timestamp derivation logic

Field References:

eventhub_enqueued_time → load_dt

_ingest_time → auto-generated by DLT

anchor_date → for deduping and historical tagging
