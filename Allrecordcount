-- Extract the latest run_id
WITH latest_run AS (
    SELECT MAX(run_id) AS max_run_id
    FROM core_tst_sys9.default.data_migration_validation_results
)

-- Generate KPIs based on the latest run
SELECT 
    d.run_id,
    d.table_name,
    d.src_database,
    d.tgt_database,
    COUNT(*) AS total_tests,
    SUM(CASE WHEN d.status = 'Success' THEN 1 ELSE 0 END) AS success_count,
    SUM(CASE WHEN d.status = 'Failure' THEN 1 ELSE 0 END) AS failure_count,
    SUM(CASE WHEN d.src_vs_tgt_missing_columns IS NOT NULL THEN 1 ELSE 0 END) AS src_vs_tgt_missing_col_count,
    SUM(CASE WHEN d.tgt_vs_src_missing_columns IS NOT NULL THEN 1 ELSE 0 END) AS tgt_vs_src_missing_col_count,
    SUM(d.src_count) AS total_src_records,
    SUM(d.tgt_count) AS total_tgt_records,
    SUM(d.src_duplicate_count) AS total_src_duplicates,
    SUM(d.tgt_duplicate_count) AS total_tgt_duplicates,
    SUM(d.src_vs_tgt_data_mismatch_count) AS total_src_vs_tgt_mismatches,
    SUM(d.tgt_vs_src_data_mismatch_count) AS total_tgt_vs_src_mismatches,
    SUM(CASE WHEN d.null_diff_columns IS NOT NULL THEN 1 ELSE 0 END) AS null_diff_column_issues,
    SUM(CASE WHEN d.data_mismatch_columns IS NOT NULL THEN 1 ELSE 0 END) AS data_mismatch_column_issues,
    AVG(d.time_taken_seconds) AS avg_time_taken_seconds,
    MAX(d.time_taken_seconds) AS max_time_taken_seconds,
    MIN(d.time_taken_seconds) AS min_time_taken_seconds
FROM core_tst_sys9.default.data_migration_validation_results d
JOIN latest_run l ON d.run_id = l.max_run_id
GROUP BY d.run_id, d.table_name, d.src_database, d.tgt_database
ORDER BY d.run_id DESC;
