import pandas as pd
import matplotlib.pyplot as plt
import requests
import base64
from io import BytesIO

# Step 1: Read from DLT table
spark_df = spark.read.table("core_tst_sys9.default.ddl_compare_source")
df = spark_df.select("comparison_result").dropna().toPandas()

# Step 2: Calculate percentage distribution
value_counts = df["comparison_result"].value_counts()
percentages = (value_counts / value_counts.sum() * 100).round(2)
summary_df = pd.DataFrame({
    "Value": value_counts.index,
    "Count": value_counts.values,
    "Percentage": percentages.values
})

# Step 3: Create pie chart
plt.figure(figsize=(6, 6))
plt.pie(summary_df["Count"], labels=summary_df["Value"], autopct='%1.1f%%', startangle=140)
plt.title("Comparison Result Distribution")
plt.tight_layout()

# Save pie chart to buffer
buf = BytesIO()
plt.savefig(buf, format="png")
buf.seek(0)
image_base64 = base64.b64encode(buf.read()).decode('utf-8')

# Step 4: Format Teams webhook card
teams_webhook_url = "<YOUR_TEAMS_WEBHOOK_URL>"

card_payload = {
    "@type": "MessageCard",
    "@context": "http://schema.org/extensions",
    "summary": "DLT Table Comparison Result",
    "title": "üìä DLT Table Comparison Summary",
    "sections": [
        {
            "activityTitle": "Pie Chart of Comparison Results",
            "images": [
                {
                    "image": f"data:image/png;base64,{image_base64}"
                }
            ]
        },
        {
            "facts": [
                {"name": row["Value"], "value": f"{row['Count']} ({row['Percentage']}%)"}
                for _, row in summary_df.iterrows()
            ]
        }
    ]
}

# Step 5: Send to Teams
response = requests.post(
    teams_webhook_url,
    json=card_payload,
    headers={"Content-Type": "application/json"}
)

if response.status_code == 200:
    print("‚úÖ Report sent to Teams!")
else:
    print(f"‚ùå Failed to send: {response.status_code}\n{response.text}")
