import pandas as pd
import requests

# Step 1: Read from DLT Table (Databricks SQL table)
df = spark.read.table("core_tst_sys9.default.ddl_compare_source")

# Step 2: Convert to Pandas for processing
df_pd = df.select("comparison_result").dropna().toPandas()

# Step 3: Calculate value counts and percentages
value_counts = df_pd["comparison_result"].value_counts()
percentages = (value_counts / value_counts.sum()) * 100

# Step 4: Create a summary table with conditional coloring
markdown_table = "| Result | Count | Percentage |\n|--------|-------|------------|\n"
for result, count in value_counts.items():
    percent = percentages[result]
    color = "#28a745" if result.lower() == "match" else "#dc3545"
    markdown_table += f"| <span style='color:{color}'><b>{result}</b></span> | <b>{count}</b> | <b>{percent:.2f}%</b> |\n"

# Step 5: Build Teams MessageCard payload
teams_webhook_url = "https://outlook.office.com/webhook/..."  # Replace with your Teams webhook

payload = {
    "@type": "MessageCard",
    "@context": "http://schema.org/extensions",
    "summary": "DLT Comparison Result Summary",
    "title": "üìä DLT Table - Comparison Result Summary",
    "sections": [
        {
            "text": f"### Summary Table\n\n{markdown_table}"
        }
    ]
}

# Step 6: Send to Teams
response = requests.post(teams_webhook_url, json=payload)

# Check HTTP response from Teams
print(f"Status Code: {response.status_code}")
print(f"Response Text: {response.text}")

if response.status_code == 200:
    if "message delivery failed" in response.text.lower():
        print("‚ùå Message delivery failed even though request succeeded.")
    else:
        print("‚úÖ Message sent to Teams!")
else:
    print("‚ùå Failed to send message.")
