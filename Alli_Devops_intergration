def get_test_point_list():
    try:
        url = f"{devops_organization}/{project}/_apis/test/plans/{test_plan_id}/suites/{test_suite_id}/points?includePointDetails=true&api-version=7.1-preview.1"
        response = requests.get(url, headers={**headers, 'Content-Type': 'application/json'})
        response.raise_for_status()
        points = response.json().get("value", [])
        print(f"Total test points found: {len(points)}")
        for pt in points:
            print(f"Test Point ID: {pt.get('id')}, Test Case ID: {pt.get('testCase', {}).get('id')}, Configuration ID: {pt.get('configuration', {}).get('id')}")
        return points
    except Exception as e:
        print(f"Error fetching test points list: {e}")
        return []

# Assign configuration before processing test cases
config_id = get_available_configurations()
if config_id:
    assign_configuration_to_suite(config_id)
    get_test_point_list()
