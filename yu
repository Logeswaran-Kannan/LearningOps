import psycopg2
import pandas as pd

# Replace these variables with your actual database connection details
db_config = {
    'host': 'your_host',
    'port': 'your_port',
    'database': 'your_database',
    'user': 'your_user',
    'password': 'your_password'
}

# Construct the connection string
connection_string = f"host={db_config['host']} port={db_config['port']} dbname={db_config['database']} user={db_config['user']} password={db_config['password']}"

# Connect to the PostgreSQL database
connection = psycopg2.connect(connection_string)

def get_tables_with_date_column(connection):
    result = []

    try:
        with connection.cursor() as cursor:
            # Get table names within 'kingfisher_core' schema
            cursor.execute("""
                SELECT table_name
                FROM information_schema.tables
                WHERE table_schema = 'kingfisher_core'
            """)
            tables = cursor.fetchall()

            # Get column names and count for each table containing 'date' column
            for table in tables:
                table_name = table[0]
                cursor.execute("""
                    SELECT column_name
                    FROM information_schema.columns
                    WHERE table_schema = 'kingfisher_core'
                    AND table_name = %s
                    AND column_name ILIKE '%%date%%'
                """, (table_name,))
                date_columns = cursor.fetchall()
                
                # Get total column count for the table
                cursor.execute("""
                    SELECT COUNT(*)
                    FROM information_schema.columns
                    WHERE table_schema = 'kingfisher_core'
                    AND table_name = %s
                """, (table_name,))
                column_count = cursor.fetchone()[0]
                
                if date_columns:
                    result.append({'Table': table_name, 'Date Columns': [col[0] for col in date_columns], 'Total Columns': column_count})

    except psycopg2.Error as e:
        print(f"Error: {e}")
    finally:
        connection.close()

    return result

# Fetch table names, date columns, and total column count
result_data = get_tables_with_date_column(connection)

# Output the result in a table format using Pandas
result_df = pd.DataFrame(result_data)
display(result_df)
