# Import necessary libraries
import pandas as pd
import numpy as np
from pyspark.sql import SparkSession
import matplotlib.pyplot as plt
from io import BytesIO
import base64
from IPython.display import HTML

# Read CSV file
csv_path = "/dbfs/FileStore/tables/input.csv"  # Update with your actual path
df = pd.read_csv(csv_path)

# Initialize Spark session
spark = SparkSession.builder.appName("DataValidation").getOrCreate()

# Function for data validation
def perform_data_validation(table_name, source_sql, target_sql):
    source_df = spark.sql(source_sql)
    target_df = spark.sql(target_sql)

    # Calculate counts
    source_count = source_df.count()
    target_count = target_df.count()
    source_minus_target_count = source_df.subtract(target_df).count()
    target_minus_source_count = target_df.subtract(source_df).count()

    # Determine status
    status = "Pass" if source_minus_target_count == 0 and target_minus_source_count == 0 else "Fail"

    return table_name, source_count, target_count, source_minus_target_count, target_minus_source_count, status

# Apply data validation for each row in the CSV
validation_results = [perform_data_validation(row['TableName'], row['SourceSQL'], row['TargetSQL']) for _, row in df.iterrows()]

# Create a DataFrame from the validation results
result_df = pd.DataFrame(validation_results, columns=['TableName', 'SourceCount', 'TargetCount', 'SourceMinusTarget', 'TargetMinusSource', 'Status'])

# Generate HTML report
fig, ax = plt.subplots()
result_df.plot(kind='bar', x='TableName', y=['SourceCount', 'TargetCount'], ax=ax, stacked=True, title='Count Comparison')
plt.legend(loc='upper right')

# Convert the plot to HTML
html_output = BytesIO()
plt.savefig(html_output, format='png')
plt.close()

# Encode the image to base64
html_content = '<img src="data:image/png;base64,{}"/>'.format(base64.b64encode(html_output.getvalue()).decode())

# Display results and chart
display(HTML(result_df.to_html() + html_content))
