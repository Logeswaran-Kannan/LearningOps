from pyspark.sql import SparkSession

# Create a Spark session
spark = SparkSession.builder.appName("TableCountComparison").getOrCreate()

# Define your source and destination databases
source_database_name = "your_source_database"
destination_database_name = "your_destination_database"

# Function to get table names from a database excluding '__apply' and '__ghg' tables
def get_table_names(database_name):
    tables = spark.sql(f"SHOW TABLES IN {database_name}").toPandas()
    return tables[~tables.tableName.str.startswith("__apply") & ~tables.tableName.str.endswith("__ghg")]

# Get table names from source and destination databases
source_tables = get_table_names(source_database_name)
destination_tables = get_table_names(destination_database_name)

# Create a temporary DataFrame to store the comparison results
comparison_results = []

# Compare table counts between source and destination databases
for table_row in source_tables.itertuples():
    table_name = table_row.tableName
    source_count = spark.sql(f"SELECT COUNT(*) FROM {source_database_name}.{table_name}").first()[0]
    
    destination_table_row = destination_tables[destination_tables['tableName'] == table_name]
    if not destination_table_row.empty:
        destination_count = spark.sql(f"SELECT COUNT(*) FROM {destination_database_name}.{table_name}").first()[0]
        status = "Match" if source_count == destination_count else "Mismatch"
        comparison_results.append((table_name, source_count, destination_count, status))
    else:
        comparison_results.append((table_name, source_count, None, "Missing in Destination"))

# Add missing tables from destination to comparison results
for table_row in destination_tables.itertuples():
    table_name = table_row.tableName
    if table_name not in source_tables['tableName'].values:
        destination_count = spark.sql(f"SELECT COUNT(*) FROM {destination_database_name}.{table_name}").first()[0]
        comparison_results.append((table_name, None, destination_count, "Missing in Source"))

# Create a DataFrame from the results
comparison_df = spark.createDataFrame(comparison_results, ["Table_Name", "Source_Count", "Destination_Count", "Status"])

# Show the comparison results
comparison_df.show()

# Save the comparison results to a temporary table
comparison_df.createOrReplaceTempView("table_count_comparison")

# Stop the Spark session
spark.stop()
