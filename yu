from pyspark.sql import SparkSession

# Create a Spark session
spark = SparkSession.builder.appName("TableComparison").getOrCreate()

# Define your source and destination databases
source_database = "your_source_database"
destination_database = "your_destination_database"

# Define the exclusion patterns
exclusion_patterns = ["__apply%", "%__ghg"]

# Create a list of table names from the source database
source_tables = spark.sql(f"SHOW TABLES IN {source_database}").select("tableName").collect()

# Create a list of table names from the destination database
destination_tables = spark.sql(f"SHOW TABLES IN {destination_database}").select("tableName").collect()

# Initialize a result list to store the comparison results
comparison_results = []

# Loop through source tables
for source_table in source_tables:
    table_name = source_table["tableName"]

    # Check if the table should be excluded
    if any(pattern in table_name for pattern in exclusion_patterns):
        continue

    # Check if the table exists in the destination database
    if source_table in destination_tables:
        # Get row count for the source table
        source_count = spark.sql(f"SELECT COUNT(*) FROM {source_database}.{table_name}").collect()[0][0]

        # Get row count for the corresponding table in the destination database
        target_count = spark.sql(f"SELECT COUNT(*) FROM {destination_database}.{table_name}").collect()[0][0]

        # Determine the status
        if source_count == target_count:
            status = "Match"
        else:
            status = "Mismatch"

        # Append the result to the comparison_results list
        comparison_results.append((table_name, source_count, target_count, status))
    else:
        # Table is missing in the destination database
        comparison_results.append((table_name, "N/A", "N/A", "Missing in Destination"))

# Create a DataFrame from the comparison_results list
result_df = spark.createDataFrame(comparison_results, ["Table Name", "Source Count", "Target Count", "Status"])

# Create a temporary table to store the results
result_df.createOrReplaceTempView("table_comparison_results")

# Show the result table
result_df.show()
